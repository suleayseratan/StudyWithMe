// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyWithMe.DataAccess.Concrete.EfCore;

namespace StudyWithMe.DataAccess.Migrations
{
    [DbContext(typeof(StudyWithMeContext))]
    partial class StudyWithMeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudyWithMe.Entity.Follower", b =>
                {
                    b.Property<int>("FollowedId")
                        .HasColumnType("int");

                    b.Property<int>("FollowingId")
                        .HasColumnType("int");

                    b.HasKey("FollowedId", "FollowingId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("StudyWithMe.Entity.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("StudyWithMe.Entity.GroupVideoDetail", b =>
                {
                    b.Property<int>("GroupVideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BroadcastingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxUsersCount")
                        .HasColumnType("int");

                    b.HasKey("GroupVideoId");

                    b.ToTable("GroupVideoDetails");
                });

            modelBuilder.Entity("StudyWithMe.Entity.GroupVideoGenre", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupVideoDetailGroupVideoId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "GroupId");

                    b.HasIndex("GroupVideoDetailGroupVideoId");

                    b.ToTable("GroupVideoGenres");
                });

            modelBuilder.Entity("StudyWithMe.Entity.StudyVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BroadcastingId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyVideos");
                });

            modelBuilder.Entity("StudyWithMe.Entity.VideoLikedUser", b =>
                {
                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("StudyVideoId")
                        .HasColumnType("int");

                    b.HasKey("VideoId", "UserId");

                    b.HasIndex("StudyVideoId");

                    b.ToTable("VideoLikedUsers");
                });

            modelBuilder.Entity("StudyWithMe.Entity.GroupVideoGenre", b =>
                {
                    b.HasOne("StudyWithMe.Entity.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyWithMe.Entity.GroupVideoDetail", "GroupVideoDetail")
                        .WithMany()
                        .HasForeignKey("GroupVideoDetailGroupVideoId");

                    b.Navigation("Genre");

                    b.Navigation("GroupVideoDetail");
                });

            modelBuilder.Entity("StudyWithMe.Entity.VideoLikedUser", b =>
                {
                    b.HasOne("StudyWithMe.Entity.StudyVideo", "StudyVideo")
                        .WithMany()
                        .HasForeignKey("StudyVideoId");

                    b.Navigation("StudyVideo");
                });
#pragma warning restore 612, 618
        }
    }
}
